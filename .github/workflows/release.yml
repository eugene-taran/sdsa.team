name: Release Contexts Content

on:
  push:
    branches: [main]
    paths:
      - 'contexts/**'
      - '!contexts/manifest.json'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Generate version
        id: version
        run: |
          DATE=$(date +%Y.%m.%d)
          # Find existing tags for today
          EXISTING_TAGS=$(git tag -l "v${DATE}.*" | sort -V || echo "")
          
          if [ -z "$EXISTING_TAGS" ]; then
            VERSION="${DATE}.0"
          else
            # Get the latest patch number
            LATEST_TAG=$(echo "$EXISTING_TAGS" | tail -n1)
            PATCH=$(echo $LATEST_TAG | sed "s/v${DATE}\.//" )
            VERSION="${DATE}.$((PATCH + 1))"
          fi
          
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Generated version: ${VERSION}"
      
      - name: Generate manifest with checksum
        run: |
          # Set version for the manifest
          export VERSION="${{ steps.version.outputs.version }}"
          
          # Generate checksum and create manifest.json
          node scripts/generate-checksums.js --save-manifest
          
          echo "Manifest generated with version: $VERSION"
      
      - name: Verify checksum generation
        run: |
          if [ ! -f "contexts/manifest.json" ]; then
            echo "❌ Error: manifest.json was not generated"
            exit 1
          fi
          echo "✅ Manifest with checksum generated successfully"
      
      - name: Commit manifest updates
        run: |
          git config user.name "sdsa-release-bot[bot]"
          git config user.email "sdsa-release-bot[bot]@users.noreply.github.com"
          git add contexts/manifest.json
          git diff --cached --quiet || git commit -m "chore: update manifest for v${{ steps.version.outputs.version }}"
          git push origin main
      
      - name: Create release bundles
        run: |
          cd contexts
          tar -czf ../contexts-bundle-${{ steps.version.outputs.version }}.tar.gz .
          zip -r ../contexts-bundle-${{ steps.version.outputs.version }}.zip . -q
          
          # Also create latest versions
          cp ../contexts-bundle-${{ steps.version.outputs.version }}.tar.gz ../contexts-bundle-latest.tar.gz
          cp ../contexts-bundle-${{ steps.version.outputs.version }}.zip ../contexts-bundle-latest.zip
      
      - name: Generate changelog
        run: |
          cat > CHANGELOG.md << EOF
          ## 🚀 Contexts Content Release v${{ steps.version.outputs.version }}
          
          ### 📅 Released
          $(date -u +"%Y-%m-%d %H:%M UTC")
          
          ### 📦 Bundle Downloads
          - [contexts-bundle-${{ steps.version.outputs.version }}.tar.gz](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/contexts-bundle-${{ steps.version.outputs.version }}.tar.gz)
          - [contexts-bundle-${{ steps.version.outputs.version }}.zip](https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.version }}/contexts-bundle-${{ steps.version.outputs.version }}.zip)
          
          ### 📊 Statistics
          - Total categories: $(find contexts/categories -maxdepth 1 -type d | wc -l || echo 0)
          - Total topics: $(find contexts/categories -name "*.json" -not -name "category.json" -not -name "manifest.json" 2>/dev/null | wc -l || echo 0)
          
          ### 🔗 Quick Links
          - [View Manifest](https://raw.githubusercontent.com/${{ github.repository }}/main/contexts/manifest.json)
          EOF
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Contexts Content v${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          files: |
            contexts-bundle-*.tar.gz
            contexts-bundle-*.zip
          draft: false
          prerelease: false
      
      - name: Update latest tag
        run: |
          git tag -f latest
          git push origin latest --force