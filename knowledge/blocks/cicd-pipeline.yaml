id: 'cicd-pipeline'
title: 'CI/CD Pipeline Setup'
description: 'Configure continuous integration and deployment pipelines'
initial_question: 'What platform are you using for CI/CD?'

paths:
  github-actions:
    question: 'What type of project are you deploying?'
    options: ['node-app', 'docker-container', 'static-site']
    resources:
      - 'github-actions-basics.md'
    paths:
      node-app:
        question: 'Which cloud provider are you deploying to?'
        options: ['aws', 'vercel', 'heroku']
        resources:
          - 'node-deployment-guide.md'
        paths:
          aws:
            resources:
              - 'aws-node-deployment.md'
            summary: 'Your Node.js app is now configured for AWS deployment via GitHub Actions'
          vercel:
            resources:
              - 'vercel-deployment.md'
            summary: 'Your app is set up for automatic Vercel deployments'
          heroku:
            resources:
              - 'heroku-pipeline.md'
            summary: 'Heroku pipeline is configured with automatic deployments'
      docker-container:
        question: 'Where will you host your Docker images?'
        options: ['docker-hub', 'github-registry', 'aws-ecr']
        resources:
          - 'docker-ci-guide.md'
        paths:
          docker-hub:
            resources:
              - 'docker-hub-workflow.md'
            summary: 'Docker Hub automated builds are configured'
          github-registry:
            resources:
              - 'github-container-registry.md'
            summary: 'GitHub Container Registry is set up for your images'
          aws-ecr:
            resources:
              - 'aws-ecr-setup.md'
            summary: 'AWS ECR repository and push workflow configured'
      static-site:
        question: 'Which hosting service?'
        options: ['github-pages', 'netlify', 's3-cloudfront']
        resources:
          - 'static-site-deployment.md'
        paths:
          github-pages:
            resources:
              - 'github-pages-workflow.md'
            summary: 'GitHub Pages deployment workflow is ready'
          netlify:
            resources:
              - 'netlify-ci.md'
            summary: 'Netlify continuous deployment configured'
          s3-cloudfront:
            resources:
              - 's3-static-hosting.md'
            summary: 'S3 and CloudFront distribution configured'
  
  jenkins:
    question: 'What type of Jenkins setup?'
    options: ['pipeline-as-code', 'freestyle-project']
    resources:
      - 'jenkins-basics.md'
    paths:
      pipeline-as-code:
        question: 'Which syntax do you prefer?'
        options: ['declarative', 'scripted']
        resources:
          - 'jenkinsfile-guide.md'
        paths:
          declarative:
            resources:
              - 'declarative-pipeline.md'
            summary: 'Declarative Jenkinsfile pipeline configured'
          scripted:
            resources:
              - 'scripted-pipeline.md'
            summary: 'Scripted Jenkinsfile pipeline ready'
      freestyle-project:
        resources:
          - 'jenkins-freestyle-setup.md'
        summary: 'Freestyle Jenkins project configured'
  
  gitlab-ci:
    question: 'What deployment strategy?'
    options: ['auto-devops', 'custom-pipeline']
    resources:
      - 'gitlab-ci-basics.md'
    paths:
      auto-devops:
        resources:
          - 'gitlab-auto-devops.md'
        summary: 'GitLab Auto DevOps enabled and configured'
      custom-pipeline:
        question: 'Which environment setup?'
        options: ['single-env', 'multi-env']
        resources:
          - 'gitlab-yml-guide.md'
        paths:
          single-env:
            resources:
              - 'single-environment-pipeline.md'
            summary: 'Single environment pipeline configured'
          multi-env:
            resources:
              - 'multi-stage-deployment.md'
            summary: 'Multi-environment pipeline with staging and production ready'

context_variables:
  - ci_platform
  - project_type
  - deployment_target
  - container_registry
  - pipeline_type

# INTENTIONAL ERRORS:
# 1. Missing metadata section (required)
# 2. Wrong indentation (using tabs instead of spaces on this line)
	wrong_indent: 'This line has tab indentation'
# 3. Missing colon after key
invalid_key 'Missing colon here'